name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Generate binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.17.2]
        otp: [26.0]
        node: [20.5.1]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Restore dependencies cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('mix.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Compile assets
        run: |
          mix assets.deploy

      - name: Generate release
        run: MIX_ENV=prod mix release

      - name: Deploy via SSH
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/${{ secrets.REMOTE_USER }}

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export PHX_SERVER=${{ secrets.PHX_SERVER }}
            export SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
            export PHX_HOST=${{ secrets.PHX_HOST }}
            export PORT=${{ secrets.PORT }}
            chmod +x _build/prod/rel/avalie_tech/bin/avalie_tech

            kill $(lsof -ti tcp:${{ secrets.PORT }}) || echo "No process to kill."

            _build/prod/rel/avalie_tech/bin/avalie_tech eval 'AvalieTech.Release.migrate()'

            nohup _build/prod/rel/avalie_tech/bin/avalie_tech start > nohup.out 2> nohup.err &
